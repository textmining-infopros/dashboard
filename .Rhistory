library(holepunch)
write_compendium_description(package = "case study 1B",
description = "Clustering in R")
library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)    # for static and interactive maps
library(leaflet) # for interactive maps
library(ggplot2)
install.packages(c("sf", "raster", "spData", "spDataLarge", "tmap"))
library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)    # for static and interactive maps
library(leaflet) # for interactive maps
library(ggplot2) # tidyverse data visualization package
tm_shape(us) +
tm_fill()
tm_shape(nz) +
tm_fill()
us_states2163 = st_transform(us_states, 2163)
us_states_range = st_bbox(us_states2163)[4] - st_bbox(us_states2163)[2]
hawaii_range = st_bbox(hawaii)[4] - st_bbox(hawaii)[2]
alaska_range = st_bbox(alaska)[4] - st_bbox(alaska)[2]
us_states_hawaii_ratio = hawaii_range / us_states_range
us_states_alaska_ratio = alaska_range / us_states_range
us_states_map = tm_shape(us_states2163) +
tm_polygons() +
tm_layout(frame = FALSE)
hawaii_map = tm_shape(hawaii) +
tm_polygons() +
tm_layout(title = "Hawaii", frame = FALSE, bg.color = NA,
title.position = c("LEFT", "BOTTOM"))
alaska_map = tm_shape(alaska) +
tm_polygons() +
tm_layout(title = "Alaska", frame = FALSE, bg.color = NA,
title.position = c("left", "TOP"))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1,
heights = unit(c(us_states_alaska_ratio, 1), "null"))))
print(alaska_map, vp = viewport(layout.pos.row = 1))
print(us_states_map, vp = viewport(layout.pos.row = 2))
print(hawaii_map, vp = viewport(x = 0.3, y = 0.07,
height = us_states_hawaii_ratio / sum(c(us_states_alaska_ratio, 1))))
grid.lines(x = c(0, 1), y = c(0.58, 0.58), gp = gpar(lty = 2))
grid.lines(x = c(0, 0.5), y = c(0.33, 0), gp = gpar(lty = 2))
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1,
heights = unit(c(us_states_alaska_ratio, 1), "null"))))
print(alaska_map, vp = viewport(layout.pos.row = 1))
print(us_states_map, vp = viewport(layout.pos.row = 2))
print(hawaii_map, vp = viewport(x = 0.3, y = 0.07,
height = us_states_hawaii_ratio / sum(c(us_states_alaska_ratio, 1))))
grid.lines(x = c(0, 1), y = c(0.58, 0.58), gp = gpar(lty = 2))
grid.lines(x = c(0, 0.5), y = c(0.33, 0), gp = gpar(lty = 2))
tm_shape(us_states_map) +
tm_fill()
tm_shape(World) +
tm_fill()
tm_shape(world) +
tm_fill()
tm_shape(world) +
tm_borders()
# Add fill and border layers to nz shape
tm_shape(world)) +
tm_fill() +
tm_borders()
map_nz = tm_shape(world) + tm_polygons()
class(world)
map_nz1 = map_nz +
tm_shape(nz_elev) + tm_raster(alpha = 0.7)
map_nz1 = map_nz +
tm_shape(world_elev) + tm_raster(alpha = 0.7)
map_nz1 = map_nz +
tm_shape() + tm_raster(alpha = 0.7)
nz_water = st_union(world) %>% st_buffer(22200) %>%
st_cast(to = "LINESTRING")
map_nz2 = map_nz1 +
tm_shape(world_water) + tm_lines()
us_states_map = tm_shape(us_states, projection = 2163) + tm_polygons() +
tm_layout(frame = FALSE)
hawaii_map = tm_shape(hawaii) + tm_polygons() +
tm_layout(title = "Hawaii", frame = FALSE, bg.color = NA,
title.position = c("LEFT", "BOTTOM"))
alaska_map = tm_shape(alaska) + tm_polygons() +
tm_layout(title = "Alaska", frame = FALSE, bg.color = NA)
us_states_map
print(hawaii_map, vp = grid::viewport(0.35, 0.1, width = 0.2, height = 0.1))
print(alaska_map, vp = grid::viewport(0.15, 0.15, width = 0.3, height = 0.3))
data <- read.csv("C:\\Users\\lamba\\Desktop\\backup\\CSV files\\1\2017.csv")
data <- read.csv("C:\\Users\\lamba\\Desktop\\backup\\CSV files\\1\\2018.csv)
urb_anim = tm_shape(us_states_map) + tm_polygons() +
tm_shape(urban_agglomerations) + tm_dots(size = "") +
tm_facets(along = "year", free.coords = FALSE)
data <- read.csv("C:\\Users\\lamba\\Desktop\\backup\\CSV files\\1\\2018.csv)
data <- read.csv("C:\\Users\\lamba\\Desktop\\backup\\CSV files\\1\\2018.csv")
View(data)
urb_anim = tm_shape(us_states_map) + tm_polygons() +
tm_shape(urban_agglomerations) + tm_dots(size = "") +
tm_facets(along = "Degree.date", free.coords = FALSE)
tmap_animation(urb_anim, filename = "urb_anim.gif", delay = 25)
library(gifski)
install.packages("gifski")
library(gifski)
tmap_animation(urb_anim, filename = "urb_anim.gif", delay = 25)
tmap_animation(urb_anim, filename = "urb_anim.gif", delay = 25)
urb_anim = tm_shape(us_states, 2163) + tm_polygons() +
tm_shape(urban_agglomerations) + tm_dots(size = "") +
tm_facets(along = "Degree.date", free.coords = FALSE)
tmap_animation(urb_anim, filename = "urb_anim.gif", delay = 25)
us_states2163 = st_transform(us_states, 2163)
us_states2163_ncont = cartogram_ncont(us_states2163, "Degree.date")
us_states2163_ncont = cartogram_ncont(us_states2163, "data$Degree.date")
urb_anim = tm_shape(us_states, 2163) + tm_polygons() +
tm_shape(urban_agglomerations) + tm_dots(size = "") +
tm_facets(along = "data$Degree.date", free.coords = FALSE)
tmap_animation(urb_anim, filename = "urb_anim.gif", delay = 25)
us_states2163_ncont = cartogram_ncont(us_states2163, "data$Degree.date")
us_states2163_dorling = cartogram_dorling(us_states2163, "data$Degree.date")
xaringan:::inf_mr()
xaringan:::inf_mr()
#Load data
url <- "C:\\Users\\lamba\\Desktop\\New folder"
length <- length(dir(url))
dirpdf <- dir(url)
dirpdf[1]
#Converting text to pdf
pdftotext <- "D:\\xpdf-tools-win-4.02\\bin64\\pdftotext.exe"
for(i in 1:length(dir(url)))
{
pdf <- file.path("C:\\Users\\lamba\\Desktop\\New folder", dirpdf[i])
system(paste("\"", pdftotext, "\" \"", pdf, "\"", sep=""), wait=F)
}
url <- "C:\\Users\\lamba\\Desktop\\New folder"
length <- length(dir(url))
dirpdf <- dir(url)
dirpdf[1]
pdftotext <- "D:\\xpdf-tools-win-4.02\\bin64\\pdftotext.exe"
for(i in 1:length(dir(url)))
{
pdf <- file.path("C:\\Users\\lamba\\Desktop\\New folder", dirpdf[i])
system(paste("\"", pdftotext, "\" \"", pdf, "\"", sep=""), wait=F)
}
pdftotext <- "G:\\Lenovo (D)\\xpdf-tools-win-4.02\\bin64\\pdftotext.exe"
for(i in 1:length(dir(url)))
{
pdf <- file.path("C:\\Users\\lamba\\Desktop\\New folder", dirpdf[i])
system(paste("\"", pdftotext, "\" \"", pdf, "\"", sep=""), wait=F)
}
xaringan:::inf_mr()
usethis::edit_r_profile()
library(usethis)
edit_r_profile()
usethis::edit_r_profile()
library(reticulate)
repl_python()
import pandas
View(r)
exit
reticulate::repl_python()
import pandas as pd
x = 9
print("hello from Python!")
quit
library(tidyverse)
x <- 5
print("hello!")
remotes::install_github("rstudio/bslib")
library(bootswatch)
install.packages("bslib")
library(bslib)
setwd("~/GitHub/dashboard")
![Â©2021 Lamba and Madhusdhan - all rights reserved](3.png)
